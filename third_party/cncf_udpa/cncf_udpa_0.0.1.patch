diff --git a/bazel/api_build_system.bzl b/bazel/api_build_system.bzl
index 9fe869a..90320a1 100644
--- a/bazel/api_build_system.bzl
+++ b/bazel/api_build_system.bzl
@@ -1,7 +1,7 @@
-load("@com_envoyproxy_protoc_gen_validate//bazel:pgv_proto_library.bzl", "pgv_cc_proto_library")
+#load("@com_envoyproxy_protoc_gen_validate//bazel:pgv_proto_library.bzl", "pgv_cc_proto_library")
 load("@com_google_protobuf//:protobuf.bzl", _py_proto_library = "py_proto_library")
-load("@io_bazel_rules_go//go:def.bzl", "go_test")
-load("@io_bazel_rules_go//proto:def.bzl", "go_grpc_library", "go_proto_library")
+#load("@io_bazel_rules_go//go:def.bzl", "go_test")
+#load("@io_bazel_rules_go//proto:def.bzl", "go_grpc_library", "go_proto_library")
 load("@rules_proto//proto:defs.bzl", "proto_library")

 _PY_PROTO_SUFFIX = "_py_proto"
@@ -91,18 +91,18 @@ def _xds_cc_py_proto_library(
         visibility = visibility,
     )
     cc_proto_library_name = name + _CC_PROTO_SUFFIX
-    pgv_cc_proto_library(
-        name = cc_proto_library_name,
-        linkstatic = linkstatic,
-        cc_deps = [_cc_proto_mapping(dep) for dep in deps] + [
-            "@com_google_googleapis//google/api:http_cc_proto",
-            "@com_google_googleapis//google/api:httpbody_cc_proto",
-            "@com_google_googleapis//google/api:annotations_cc_proto",
-            "@com_google_googleapis//google/rpc:status_cc_proto",
-        ],
-        deps = [relative_name],
-        visibility = ["//visibility:public"],
-    )
+#    pgv_cc_proto_library(
+#        name = cc_proto_library_name,
+#        linkstatic = linkstatic,
+#        cc_deps = [_cc_proto_mapping(dep) for dep in deps] + [
+#            "@com_google_googleapis//google/api:http_cc_proto",
+#            "@com_google_googleapis//google/api:httpbody_cc_proto",
+#            "@com_google_googleapis//google/api:annotations_cc_proto",
+#            "@com_google_googleapis//google/rpc:status_cc_proto",
+#        ],
+#        deps = [relative_name],
+#        visibility = ["//visibility:public"],
+#    )
     _xds_py_proto_library(name, srcs, deps)

     # Optionally define gRPC services
@@ -127,24 +127,24 @@ def xds_proto_package(srcs = [], deps = [], has_services = False, visibility = [
     if has_services:
         compilers = ["@io_bazel_rules_go//proto:go_grpc", "//bazel:pgv_plugin_go"]

-    go_proto_library(
-        name = name + _GO_PROTO_SUFFIX,
-        compilers = compilers,
-        importpath = _GO_IMPORTPATH_PREFIX + native.package_name(),
-        proto = name,
-        visibility = ["//visibility:public"],
-        deps = [_go_proto_mapping(dep) for dep in deps] + [
-            "@com_envoyproxy_protoc_gen_validate//validate:go_default_library",
-            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
-            "@go_googleapis//google/api:annotations_go_proto",
-            "@go_googleapis//google/rpc:status_go_proto",
-            "@io_bazel_rules_go//proto/wkt:any_go_proto",
-            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
-            "@io_bazel_rules_go//proto/wkt:struct_go_proto",
-            "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
-            "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
-        ],
-    )
+#    go_proto_library(
+#        name = name + _GO_PROTO_SUFFIX,
+#        compilers = compilers,
+#        importpath = _GO_IMPORTPATH_PREFIX + native.package_name(),
+#        proto = name,
+#        visibility = ["//visibility:public"],
+#        deps = [_go_proto_mapping(dep) for dep in deps] + [
+#            "@com_envoyproxy_protoc_gen_validate//validate:go_default_library",
+#            "@com_github_golang_protobuf//ptypes:go_default_library_gen",
+#            "@go_googleapis//google/api:annotations_go_proto",
+#            "@go_googleapis//google/rpc:status_go_proto",
+#            "@io_bazel_rules_go//proto/wkt:any_go_proto",
+#            "@io_bazel_rules_go//proto/wkt:duration_go_proto",
+#            "@io_bazel_rules_go//proto/wkt:struct_go_proto",
+#            "@io_bazel_rules_go//proto/wkt:timestamp_go_proto",
+#            "@io_bazel_rules_go//proto/wkt:wrappers_go_proto",
+#        ],
+#    )

 def xds_cc_test(name, **kwargs):
     native.cc_test(
@@ -152,11 +152,11 @@ def xds_cc_test(name, **kwargs):
         **kwargs
     )

-def xds_go_test(name, **kwargs):
-    go_test(
-        name = name,
-        **kwargs
-    )
+#def xds_go_test(name, **kwargs):
+#    go_test(
+#        name = name,
+#        **kwargs
+#    )

 # Old names for backward compatibility.
 # TODO(roth): Remove these once all callers are migrated to the new names.
@@ -166,5 +166,5 @@ def udpa_proto_package(srcs = [], deps = [], has_services = False, visibility =
 def udpa_cc_test(name, **kwargs):
   xds_cc_test(name, **kwargs)

-def udpa_go_test(name, **kwargs):
-  xds_go_test(name, **kwargs)
+#def udpa_go_test(name, **kwargs):
+#  xds_go_test(name, **kwargs)
diff --git a/test/build/BUILD b/test/build/BUILD
index b32a1c5..c1df7d3 100644
--- a/test/build/BUILD
+++ b/test/build/BUILD
@@ -1,4 +1,4 @@
-load("//bazel:api_build_system.bzl", "xds_cc_test", "xds_go_test")
+load("//bazel:api_build_system.bzl", "xds_cc_test")

 licenses(["notice"])  # Apache 2

@@ -13,18 +13,18 @@ xds_cc_test(
     ],
 )

-xds_go_test(
-    name = "go_build_test",
-    srcs = ["go_build_test.go"],
-    importpath = "go_build_test",
-    deps = [
-        "//xds/data/orca/v3:pkg_go_proto",
-        "//xds/service/orca/v3:pkg_go_proto",
-        "//xds/type/v3:pkg_go_proto",
-        # Old names for backward compatibility.
-        # TODO(roth): Remove once all callers are updated to use the new names.
-        "//udpa/data/orca/v1:pkg_go_proto",
-        "//udpa/service/orca/v1:pkg_go_proto",
-        "//udpa/type/v1:pkg_go_proto",
-    ],
-)
+#xds_go_test(
+#    name = "go_build_test",
+#    srcs = ["go_build_test.go"],
+#    importpath = "go_build_test",
+#    deps = [
+#        "//xds/data/orca/v3:pkg_go_proto",
+#        "//xds/service/orca/v3:pkg_go_proto",
+#        "//xds/type/v3:pkg_go_proto",
+#        # Old names for backward compatibility.
+#        # TODO(roth): Remove once all callers are updated to use the new names.
+#        "//udpa/data/orca/v1:pkg_go_proto",
+#        "//udpa/service/orca/v1:pkg_go_proto",
+#        "//udpa/type/v1:pkg_go_proto",
+#    ],
+#)